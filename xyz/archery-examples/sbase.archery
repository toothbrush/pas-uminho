pattern ClientServer()
elements
element Server() 
  act 
		rreq, arreq, sres, asres, cres;
  proc Server() = 
    rreq.cres.sres.asres.arreq.Server();
  interface
  in rreq; 
  out arreq;
  out sres;
	in asres;
element Client()
	act 
	  prcs, sreq, asreq, rres, arres;
  proc Client() = prcs.sreq.rres.arres.asreq.Client();
  interface
    out sreq;
		in asreq;
    in rres;
		out arres;
end

architecture sbase = ClientServer() 
instances
  s = Server();
  c1 = Client();
  c2 = Client();
attachments
  from c1.sreq to s.rreq;
  from s.arreq to c1.asreq;
  from c2.sreq to s.rreq;
  from s.arreq to c2.asreq;
  from s.sres to c1.rres;
  from c1.arres to s.asres;
  from s.sres to c2.rres;  
  from c2.arres to s.asres;  
end
